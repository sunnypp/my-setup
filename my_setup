#!/bin/sh

# Title:         my_setup CLI Tool
# Description:   my_setup CLI Tool for Bash/Zsh/Sh/Ksh
# Author:        Sunny Pun <sunnyppsp@gmail.com>

set -eu
VERSION="0.0.1"
SCRIPT_NAME=$(basename "$0")

# Set variables
TODO_NAME="todo.md"

# Keep readlinkf function
readlinkf() {
    [ "${1:-}" ] || return 1
    max_symlinks=40
    CDPATH='' # to avoid changing to an unexpected directory

    target=$1
    [ -e "${target%/}" ] || target=${1%"${1##*[!/]}"} # trim trailing slashes
    [ -d "${target:-/}" ] && target="$target/"

    cd -P . 2>/dev/null || return 1
    while [ "$max_symlinks" -ge 0 ] && max_symlinks=$((max_symlinks - 1)); do
        if [ ! "$target" = "${target%/*}" ]; then
            case $target in
            /*) cd -P "${target%/*}/" 2>/dev/null || break ;;
            *) cd -P "./${target%/*}" 2>/dev/null || break ;;
            esac
            target=${target##*/}
        fi

        if [ ! -L "$target" ]; then
            target="${PWD%/}${target:+/}${target}"
            printf '%s\n' "${target:-/}"
            return 0
        fi
        link=$(ls -dl -- "$target" 2>/dev/null) || break
        target=${link#*" $target -> "}
    done
    return 1
}

self=$(readlinkf "$0")
script_dir=${self%/*}
todo_file="$script_dir/$TODO_NAME"
# For Debian APT remove line 7 to 38 and use the following line to
# define the script_dir
# script_dir="/usr/share/shellscript_template"

# Import files
# shellcheck disable=SC1091
{
    . "${script_dir}/lib/getoptions.sh"
    . "${script_dir}/lib/main_definition.sh"
    . "${script_dir}/lib/utils.sh"
    . "${script_dir}/lib/automata_definition.sh"
    . "${script_dir}/lib/installer_definition.sh"
    . "${script_dir}/lib/audio_video_tools_definition.sh"
    . "${script_dir}/lib/browsers_definition.sh"
    . "${script_dir}/lib/calendar_definition.sh"
    . "${script_dir}/lib/code_editor_definition.sh"
    . "${script_dir}/lib/messaging_apps_definition.sh"
    . "${script_dir}/lib/outliner_apps_definition.sh"
    . "${script_dir}/lib/productivity_hacks_definition.sh"
    . "${script_dir}/lib/shell_definition.sh"
    . "${script_dir}/lib/system_resource_monitor_definition.sh"
    . "${script_dir}/lib/system_settings_definition.sh"
    . "${script_dir}/lib/terminal_definition.sh"
    . "${script_dir}/lib/terminal_multiplexer_definition.sh"
    . "${script_dir}/lib/version_control_tools_definition.sh"

    . "${script_dir}/lib/cmd1_definition.sh"
    . "${script_dir}/lib/cmd2_definition.sh"
    . "${script_dir}/lib/create_definition.sh"
    # import only one of helpers file
    # . "${script_dir}/lib/shell_helpers.sh"
    # or
    # . "${script_dir}/lib/bash_helpers.sh"
}

# Keep it. You need this for main parser.
eval "$(getoptions parser_definition parse "$0") exit 1"
parse "$@"
eval "set -- $REST"

eval_program() {
    cmd=$1
    shift
    param=$1
    shift
    eval "$(getoptions parser_definition_$cmd parse $param)"
    parse "$@"
    eval "set -- $REST"
    # shellcheck disable=SC1091
    . "${script_dir}/src/${cmd}.sh"
    eval "fn_${cmd} '$@'"
}

if [ $# -gt 0 ]; then
    cmd=$1
    shift
    case $cmd in
    cmd1) eval_program cmd1 "$0" $@;;
    cmd2) eval_program cmd2 "$0" $@;;

    # this doesn't have param. Omitting it from refactoring
    text_example)
        # shellcheck disable=SC1091
        . "${script_dir}/src/text_example.sh"
        fn_text
        ;;

    create)                  eval_program create                  "$0" $@;;
    automata)                eval_program automata                "$0" $@;;
    installer)               eval_program installer               "$0" $@;;

    audio_video_tools)       eval_program audio_video_tools       "$0" $@;;
    browsers)                eval_program browsers                "$0" $@;;
    calendar)                eval_program calendar                "$0" $@;;
    code_editor)             eval_program code_editor             "$0" $@;;
    messaging_apps)          eval_program messaging_apps          "$0" $@;;
    outliner_apps)           eval_program outliner_apps           "$0" $@;;
    productivity_hacks)      eval_program productivity_hacks      "$0" $@;;
    shell)                   eval_program shell                   "$0" $@;;
    system_resource_monitor) eval_program system_resource_monitor "$0" $@;;
    system_settings)         eval_program system_settings         "$0" $@;;
    terminal)                eval_program terminal                "$0" $@;;
    terminal_multiplexer)    eval_program terminal_multiplexer    "$0" $@;;
    version_control_tools)   eval_program version_control_tools   "$0" $@;;

    --) ;; # no subcommand, arguments only
    esac
fi
